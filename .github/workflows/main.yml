name: Monopoly Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - sit
          - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'dev' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Determine environment for deployment
      id: env-vars
      run: |
        if [[ "${{ github.event.inputs.environment }}" == "dev" || ("${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main") ]]; then
          echo "SPRING_PROFILE=dev" >> $GITHUB_OUTPUT
          echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_DEV_DEPLOY_HOOK }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event.inputs.environment }}" == "sit" ]]; then
          echo "SPRING_PROFILE=sit" >> $GITHUB_OUTPUT
          echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_SIT_DEPLOY_HOOK }}" >> $GITHUB_OUTPUT
        else
          echo "SPRING_PROFILE=prod" >> $GITHUB_OUTPUT
          echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_PROD_DEPLOY_HOOK }}" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Render
      if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: |
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST ${{ steps.env-vars.outputs.RENDER_DEPLOY_HOOK }})
        
        if [ "$HTTP_STATUS" -ge 200 ] && [ "$HTTP_STATUS" -lt 300 ]; then
          echo "Render deployment triggered successfully (HTTP $HTTP_STATUS)"
        else
          echo "Failed to trigger Render deployment (HTTP $HTTP_STATUS)"
          exit 1  # Fail the GitHub Actions job
        fi
      
    
